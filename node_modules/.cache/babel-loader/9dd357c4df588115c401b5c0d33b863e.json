{"ast":null,"code":"var _jsxFileName = \"/Users/siaoco/Desktop/coursera/react-front-end/confusion/src/components/DishdetailComponent.js\";\nimport React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap'; // function RenderDish(props){}\n\nfunction RenderDish({\n  dish\n}) {\n  if (dish != null) {\n    return React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      width: \"100%\",\n      src: dish.image,\n      alt: dish.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \" \", dish.name, \" \"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" \", dish.description, \" \"))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n} // function RenderComments(props){}\n\n\nfunction RenderComments({\n  comments\n}) {\n  if (comments != null) {\n    const cmnts = comments.map(commnts => {\n      return React.createElement(\"ul\", {\n        key: commnts.id,\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" \", commnts.comment, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" -- \", commnts.author, \", \\xA0\", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(commnts.date))))));\n    });\n    return React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" Comments \"), cmnts); // if comments is empty     \n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }\n}\n\nconst DishDetail = props => {\n  if (props.dish != null) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(RenderDish, {\n      dish: props.dish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(RenderComments, {\n      comments: props.dish.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  }\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["/Users/siaoco/Desktop/coursera/react-front-end/confusion/src/components/DishdetailComponent.js"],"names":["React","Card","CardImg","CardText","CardBody","CardTitle","RenderDish","dish","image","name","description","RenderComments","comments","cmnts","map","commnts","id","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\n\n    // function RenderDish(props){}\n    function RenderDish({dish}) {\n        if (dish != null) {\n            return (\n                <div className=\"col-12 col-md-5 m-1\">\n                    <Card>\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n                        <CardBody>\n                            <CardTitle> {dish.name} </CardTitle>\n                            <CardText> {dish.description} </CardText>\n                        </CardBody>\n                    </Card>\n                </div>    \n            );\n        } else {\n            return (\n                <div></div>\n            );\n        }\n    }\n\n    // function RenderComments(props){}\n    function RenderComments({comments}) {\n        if (comments != null) {\n            const cmnts = comments.map((commnts) => {\n                return (\n                    <ul key={commnts.id} className=\"list-unstyled\">\n                        <li>\n                            <p> {commnts.comment} </p>\n                            <p> -- {commnts.author},\n                                &nbsp;\n                                {new Intl.DateTimeFormat('en-US', {\n                                    year: 'numeric',\n                                    month: 'short',\n                                    day: '2-digit'\n                                }).format(new Date(Date.parse(commnts.date)))}\n                            </p>\n                        </li>\n                    </ul>\n                );\n            });\n\n            return (\n                <div className=\"col-12 col-md-5 m-1\">\n                    <h4> Comments </h4>\n                    {cmnts}\n                </div>\n            );  \n        // if comments is empty     \n        } else {\n            return (\n                <div></div>\n            );\n        }\n    }\n    \n    const DishDetail = (props) => {\n        if (props.dish != null) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <RenderDish dish={props.dish} />\n                        <RenderComments comments={props.dish.comments} />\n                    </div>    \n                </div>\n            );\n        } else {\n            return (\n                <div></div>\n            );\n        }\n    }\n    \nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}